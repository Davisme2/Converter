# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'INTERFACE.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QFileDialog, QVBoxLayout, QTableWidget, QStackedWidget, QMessageBox, QWidget, QProgressBar
from PyQt5.QtWidgets import QFileDialog


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1254, 888)
        MainWindow.setMinimumSize(QtCore.QSize(0, 0))
        MainWindow.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        MainWindow.setStyleSheet("background-color: rgb(40, 40, 42);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(620, 750, 241, 61))
        self.pushButton.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 24pt \"Roboto\";")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.open_file_dialog)

        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(920, 750, 241, 61))
        self.pushButton_2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 24pt \"Roboto\";")
        self.pushButton_2.setObjectName("pushButton_2")

        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(50, 50, 1141, 601))
        self.tableWidget.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        #self.tableWidget.setHorizontalHeaderLabels(["Nom du fichier", "format", "Taille", "Statut", "Temps restant"])
        self.tableWidget.setColumnWidth(0, 582)
        self.tableWidget.setColumnWidth(1, 107)
        self.tableWidget.setColumnWidth(2, 150)
        self.tableWidget.setColumnWidth(3, 150)
        self.tableWidget.setColumnWidth(4, 150)

        # Supprimer la numérotation des lignes
        self.tableWidget.verticalHeader().setVisible(False)
        self.tableWidget.horizontalHeader().setVisible(False)

        # Générer les 14 premières lignes vides
        for i in range(0, 16):
            self.tableWidget.insertRow(i)

        # Définir la couleur de fond pour les cellules "Nom du fichier", "format", "Taille", "Statut", "Temps restant"
        cell_background_color = QtGui.QBrush(QtGui.QColor("#bcdcf4"))

        # Colonne 0 : "Nom du fichier"
        self.tableWidget.setItem(0, 0, QtWidgets.QTableWidgetItem("Nom du fichier"))
        self.tableWidget.item(0, 0).setBackground(cell_background_color)
        self.tableWidget.item(0, 0).setTextAlignment(QtCore.Qt.AlignCenter)

        # Colonne 1 : "format"
        self.tableWidget.setItem(0, 1, QtWidgets.QTableWidgetItem("format"))
        self.tableWidget.item(0, 1).setBackground(cell_background_color)
        self.tableWidget.item(0, 1).setTextAlignment(QtCore.Qt.AlignCenter)

        # Colonne 2 : "Taille"
        self.tableWidget.setItem(0, 2, QtWidgets.QTableWidgetItem("Taille"))
        self.tableWidget.item(0, 2).setBackground(cell_background_color)
        self.tableWidget.item(0, 2).setTextAlignment(QtCore.Qt.AlignCenter)

        # Colonne 3 : "Statut"
        self.tableWidget.setItem(0, 3, QtWidgets.QTableWidgetItem("Statut"))
        self.tableWidget.item(0, 3).setBackground(cell_background_color)
        self.tableWidget.item(0, 3).setTextAlignment(QtCore.Qt.AlignCenter)

        # Colonne 4 : "Temps restant"
        self.tableWidget.setItem(0, 4, QtWidgets.QTableWidgetItem("Temps restant"))
        self.tableWidget.item(0, 4).setBackground(cell_background_color)
        self.tableWidget.item(0, 4).setTextAlignment(QtCore.Qt.AlignCenter)


        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1254, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "selectionner"))
        self.pushButton_2.setText(_translate("MainWindow", "convertir"))

    def open_file_dialog(self):
        options = QtWidgets.QFileDialog.Options()
        options |= QtWidgets.QFileDialog.ReadOnly

        file_dialog = QtWidgets.QFileDialog()
        video_files, _ = file_dialog.getOpenFileNames(None, "Sélectionner des fichiers média", "", "Fichiers Média (*.mp4 *.avi *.mkv *.mp3 *.wav *.mov);;Tous les fichiers (*)", options=options)

        if video_files:
            self.selected_files = video_files
            print("Vidéos sélectionnées :", self.selected_files)
            # Créer un tableau avec les colonnes et les entêtes
            self.tableWidget.setColumnCount(4)
            self.tableWidget.setHorizontalHeaderLabels(["Nom du fichier", "Taille", "Statut", "Temps restant"])
            
            # Ajouter les lignes pour les fichiers sélectionnés
            for file in self.selected_files:
                # Ajouter une nouvelle ligne
                rowPosition = self.tableWidget.rowCount()
                self.tableWidget.insertRow(rowPosition)

                # Insérer le nom du fichier dans la première cellule
                self.tableWidget.setItem(rowPosition, 0, QtWidgets.QTableWidgetItem(file))

                # Autres opérations que vous souhaitez effectuer, par exemple la taille, le statut, le temps restant

                # Ajuster la taille de la première colonne (4 fois plus grande que les autres)
                self.tableWidget.setColumnWidth(0, 4 * self.tableWidget.width() / 6)

            # Si le nombre de lignes dépasse 10, augmentez la hauteur de la table pour afficher plus de lignes
            if self.tableWidget.rowCount() > 10:
                new_height = self.tableWidget.rowCount() * self.tableWidget.rowHeight(0)
                self.tableWidget.setFixedHeight(new_height)
        else:
            QMessageBox.warning(self, "Avertissement", "Veuillez sélectionner une ou plusieurs vidéos s'il vous plaît.",
                                QMessageBox.Ok)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
